{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class ImgBrokenDirective {\n  handleError() {\n    console.log('ðŸ”´ EstÃ¡ imagen estÃ¡ frita');\n  }\n  constructor(elHost) {\n    this.elHost = elHost;\n  }\n}\nImgBrokenDirective.Éµfac = function ImgBrokenDirective_Factory(t) {\n  return new (t || ImgBrokenDirective)(i0.ÉµÉµdirectiveInject(i0.ElementRef));\n};\nImgBrokenDirective.Éµdir = /*@__PURE__*/i0.ÉµÉµdefineDirective({\n  type: ImgBrokenDirective,\n  selectors: [[\"img\", \"appImgBroken\", \"\"]],\n  hostBindings: function ImgBrokenDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ÉµÉµlistener(\"error\", function ImgBrokenDirective_error_HostBindingHandler() {\n        return ctx.handleError();\n      });\n    }\n  }\n});","map":{"version":3,"names":["ImgBrokenDirective","handleError","console","log","constructor","elHost","i0","ÉµÉµdirectiveInject","ElementRef","selectors","hostBindings","ImgBrokenDirective_HostBindings","rf","ctx"],"sources":["C:\\angular\\spotify\\src\\app\\shared\\directives\\img-broken.directive.ts"],"sourcesContent":["import { Directive, ElementRef, HostListener } from '@angular/core';\n\n@Directive({\n  selector: 'img[appImgBroken]'\n})\nexport class ImgBrokenDirective {\n  @HostListener('error') handleError():void{\n    console.log('ðŸ”´ EstÃ¡ imagen estÃ¡ frita');\n  }\n  constructor(private elHost: ElementRef) { \n    \n  }\n\n}\n"],"mappings":";AAKA,OAAM,MAAOA,kBAAkB;EACNC,WAAWA,CAAA;IAChCC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;EAC1C;EACAC,YAAoBC,MAAkB;IAAlB,KAAAA,MAAM,GAANA,MAAM;EAE1B;;AANWL,kBAAkB,C;mBAAlBA,kBAAkB,EAAAM,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAE,UAAA;AAAA;AAAlBR,kBAAkB,C;QAAlBA,kBAAkB;EAAAS,SAAA;EAAAC,YAAA,WAAAC,gCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;;eAAlBC,GAAA,CAAAZ,WAAA,EAAa;MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}