{"ast":null,"code":"import { Observable, of } from 'rxjs';\nimport * as dataRaw from '../../../data/tracks.json';\nimport * as i0 from \"@angular/core\";\nexport class TrackService {\n  constructor() {\n    this.dataTracksTrending$ = of([]);\n    this.dataTracksRandom$ = of([]);\n    const {\n      data\n    } = dataRaw.default;\n    this.dataTracksTrending$ = of(data);\n    this.dataTracksRandom$ = new Observable(observer => {\n      const trackExample = {\n        _id: 9,\n        name: 'Leve',\n        album: 'Cartel de Santa',\n        url: 'https://',\n        cover: 'https://',\n        duration: 12\n      };\n      observer.next(trackExample);\n    });\n  }\n}\nTrackService.ɵfac = function TrackService_Factory(t) {\n  return new (t || TrackService)();\n};\nTrackService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TrackService,\n  factory: TrackService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["Observable","of","dataRaw","TrackService","constructor","dataTracksTrending$","dataTracksRandom$","data","default","observer","trackExample","_id","name","album","url","cover","duration","next","factory","ɵfac","providedIn"],"sources":["c:\\angular\\spotify\\src\\app\\modules\\tracks\\services\\track.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { TrackModel } from '@core/models/tracks.model';\nimport { Observable, of } from 'rxjs';\nimport * as dataRaw from '../../../data/tracks.json'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TrackService {\n\n  dataTracksTrending$ : Observable<TrackModel[]> = of([]) \n  dataTracksRandom$ : Observable<any> = of([]) \n\n  constructor() { \n    const {data}:any = (dataRaw as any).default;\n    this.dataTracksTrending$ = of(data)\n    this.dataTracksRandom$ = new Observable((observer) => {\n      \n      const trackExample: TrackModel = {\n        _id:9,\n        name: 'Leve',\n        album: 'Cartel de Santa',\n        url: 'https://',\n        cover: 'https://',\n        duration: 12\n\n\n      }\n      \n      observer.next(trackExample)\n    })\n  }\n}\n"],"mappings":"AAEA,SAASA,UAAU,EAAEC,EAAE,QAAQ,MAAM;AACrC,OAAO,KAAKC,OAAO,MAAM,2BAA2B;;AAKpD,OAAM,MAAOC,YAAY;EAKvBC,YAAA;IAHA,KAAAC,mBAAmB,GAA8BJ,EAAE,CAAC,EAAE,CAAC;IACvD,KAAAK,iBAAiB,GAAqBL,EAAE,CAAC,EAAE,CAAC;IAG1C,MAAM;MAACM;IAAI,CAAC,GAAQL,OAAe,CAACM,OAAO;IAC3C,IAAI,CAACH,mBAAmB,GAAGJ,EAAE,CAACM,IAAI,CAAC;IACnC,IAAI,CAACD,iBAAiB,GAAG,IAAIN,UAAU,CAAES,QAAQ,IAAI;MAEnD,MAAMC,YAAY,GAAe;QAC/BC,GAAG,EAAC,CAAC;QACLC,IAAI,EAAE,MAAM;QACZC,KAAK,EAAE,iBAAiB;QACxBC,GAAG,EAAE,UAAU;QACfC,KAAK,EAAE,UAAU;QACjBC,QAAQ,EAAE;OAGX;MAEDP,QAAQ,CAACQ,IAAI,CAACP,YAAY,CAAC;IAC7B,CAAC,CAAC;EACJ;;AAvBWP,YAAY,C;mBAAZA,YAAY;AAAA;AAAZA,YAAY,C;SAAZA,YAAY;EAAAe,OAAA,EAAZf,YAAY,CAAAgB,IAAA;EAAAC,UAAA,EAFX;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}