{"ast":null,"code":"import { Observable, of } from 'rxjs';\nimport * as dataRaw from '../../../data/tracks.json';\nimport * as i0 from \"@angular/core\";\nexport class TrackService {\n  constructor() {\n    this.dataTracksTrending$ = of([]);\n    this.dataTracksRandom$ = of([]);\n    const {\n      data\n    } = dataRaw.default;\n    this.dataTracksTrending$ = of(data);\n    this.dataTracksRandom$ = new Observable(observer => {\n      observer.next({});\n    });\n  }\n}\nTrackService.ɵfac = function TrackService_Factory(t) {\n  return new (t || TrackService)();\n};\nTrackService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TrackService,\n  factory: TrackService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["Observable","of","dataRaw","TrackService","constructor","dataTracksTrending$","dataTracksRandom$","data","default","observer","next","factory","ɵfac","providedIn"],"sources":["c:\\angular\\spotify\\src\\app\\modules\\tracks\\services\\track.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { TrackModel } from '@core/models/tracks.model';\nimport { Observable, of } from 'rxjs';\nimport * as dataRaw from '../../../data/tracks.json'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TrackService {\n\n  dataTracksTrending$ : Observable<TrackModel[]> = of([]) \n  dataTracksRandom$ : Observable<TrackModel[]> = of([]) \n\n  constructor() { \n    const {data}:any = (dataRaw as any).default;\n    this.dataTracksTrending$ = of(data)\n    this.dataTracksRandom$ = new Observable((observer) => {\n      observer.next({})\n    })\n  }\n}\n"],"mappings":"AAEA,SAASA,UAAU,EAAEC,EAAE,QAAQ,MAAM;AACrC,OAAO,KAAKC,OAAO,MAAM,2BAA2B;;AAKpD,OAAM,MAAOC,YAAY;EAKvBC,YAAA;IAHA,KAAAC,mBAAmB,GAA8BJ,EAAE,CAAC,EAAE,CAAC;IACvD,KAAAK,iBAAiB,GAA8BL,EAAE,CAAC,EAAE,CAAC;IAGnD,MAAM;MAACM;IAAI,CAAC,GAAQL,OAAe,CAACM,OAAO;IAC3C,IAAI,CAACH,mBAAmB,GAAGJ,EAAE,CAACM,IAAI,CAAC;IACnC,IAAI,CAACD,iBAAiB,GAAG,IAAIN,UAAU,CAAES,QAAQ,IAAI;MACnDA,QAAQ,CAACC,IAAI,CAAC,EAAE,CAAC;IACnB,CAAC,CAAC;EACJ;;AAXWP,YAAY,C;mBAAZA,YAAY;AAAA;AAAZA,YAAY,C;SAAZA,YAAY;EAAAQ,OAAA,EAAZR,YAAY,CAAAS,IAAA;EAAAC,UAAA,EAFX;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}